# Rime schema settings
# encoding: utf-8

# 对应小鹤版本 10.9.1
# SHA256 of flypy.schema.yaml: A64A67E92167E8A7974FF0D15FB87FB158E911CBF9585B8917B4C28768ADC069

# 请等待更新说明

# TODO:
# 写说明和注释
# 制作符号集和变换器
# 编写更清晰的lua segmentor, 替换自带的matcher
# 制作无候选窗模式
# 制作繁体和异体字码表（没有人用就不做
# 适配其他输入方案，例如明月拼音（没有人用就不做

switches:
  - name: ascii_mode
    states: [ 中, 英 ]
    reset: 1
  - name: full_shape
    states: [ 半, 全 ]
  - name: traditionize
    states: [ 简, 繁 ]
    reset: 0
  - name: ascii_punct
    states: [ 。, ． ]
    reset: 0
  - name: enable_tetrakill
    states: [ 田, 品 ]
    reset: 1
  - name: enable_zh_literal
    states: [ '''w', 我 ]
    reset: 0

engine:
  processors:
    - lua_processor@flutterpy_auto_commit_processor@flutterpy_auto_commit
    - lua_processor@flutterpy_literal_key_processor
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - fluid_editor # transformer功能需要
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - table_translator
    - table_translator@flypy_sys
    - table_translator@flypy_top
    - table_translator@flypy_user
    - table_translator@flypy_full
    - table_translator@flutterpy_prepend
    - table_translator@flutterpy_append
    - table_translator@flutterpy_override
    - reverse_lookup_translator
    - lua_translator@flutterpy_calculator_translator
    - lua_translator@flutterpy_symbol_translator@flutterpy_symbol
    - lua_translator@flutterpy_symbolset_translator@flutterpy_symbolset
    - lua_translator@flutterpy_literal_translator
    - lua_translator@flutterpy_transformer_translator
    
  filters:
    - lua_filter@flutterpy_killer_filter
    - lua_filter@flutterpy_transformer_filter
    - simplifier@traditionize

menu:
  page_size: 5 #候选项数
  
style:
  horizontal: true #竖排为false

key_binder:
  import_preset: default #方案切换相关
  bindings:
    - {accept: comma, send: comma, when: paging} #注销逗号翻页
    - {accept: period, send: period, when: paging} #注销句号翻页
    - {accept: semicolon, send: 2, when: has_menu} #分号次选
    - {accept: apostrophe, send: 3, when: has_menu}
    - {accept: "Tab", send: Escape, when: composing}
    - {accept: "Caps_Lock", send: Escape, when: composing} 
    - {accept: "Shift+space", toggle: full_shape, when: always} #切换全半角
    - {accept: "Control+period", toggle: ascii_punct, when: always} #切换中英标点

ascii_composer:
  good_old_caps_lock: true
  switch_key:
    Caps_Lock: Escape 
    Control_L: noop
    Control_R: noop
    Eisu_toggle: clear
    Shift_L: commit_code #有编码时上屏英文并转英文状态
    Shift_R: commit_code

speller:
  alphabet: 'abcdefghijklmnopqrstuvwxyz'
  max_code_length: 4
  auto_select: true   #全码唯一自动上屏，无则后码顶上屏
  auto_select_pattern: '^\w{4}$'
  #auto_clear: max_length #manual|auto|max_length 空码按下一键确认清屏|空码自动清|达到最长码时后码顶上清屏

punctuator:
  import_preset: flutterpy_data/flutterpy_punctuation

flutterpy_symbol:
  symbol_table:
    '-':
      n: {s: 'baqi', cap: 'ba'}
      m: {s: 'qiba', cap: 'qi'}
  single_pattern: '^;([!"#$%%&''()*+,%-./:<=>?@%[\%]^_`{|}~]+)([^!"#$%%&''()*+,%-./:;<=>?@%[\%]^_`{|}~]?)'
  multiple_pattern: '^;([!"#$%%&''()*+,%-./:<=>?@%[\%]^_`{|}~]+);([^!"#$%%&''()*+,%-./:;<=>?@%[\%]^_`{|}~]*)(;?)'

flutterpy_symbolset:
  symbolset_pattern: '^;([^!"#$%%&''()*+,%-./:;<=>?@%[\%]^_`{|}~][^;]*)(;?)([^;]*)(;?)'

recognizer:
  import_preset: default
  patterns:
    uppercase: ''
    reverse_lookup: '^[a-z`]*`[a-z`]*'
    flutterpy_calculation: '^=.*'
    flutterpy_literal: '^''[^'']*''?'
    flutterpy_trans_open: '^\\[^\\]+\\?'
    flutterpy_trans_close: '^\\\\?'
    flutterpy_symbol_single: '^;[!"#$%&''()*+,\-.\/:<=>?@\[\\\]^_`{|}~]+[^!"#$%&''()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]?'
    flutterpy_symbol_multiple: '^;[!"#$%&''()*+,\-.\/:<=>?@\[\\\]^_`{|}~]+;[^!"#$%&''()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]*;?'
    #flutterpy_symbol_prefix: '^;[!"#$%&''()*+,\-.\/:<=>?@\[\\\]^_`{|}~]+;?' # 开始输入符号的时候需要识别，不然会把分号当作2
    flutterpy_symbolset: '^;([^!"#$%&''()*+,\-.\/:;<=>?@\[\\\]^_`{|}~][^;]*)?;?[^;]*;?'
    flutterpy_symbol_prefix: '^;' # 开始输入符号的时候需要识别，不然输入后续内容时就会直接上屏分号

flutterpy_auto_commit:
  auto_select_rules:
    flutterpy_literal: {terminator: "'", separator: '', separator_n: 0}
    flutterpy_trans_open: {terminator: '\', separator: '', separator_n: 0}
    flutterpy_trans_close: {terminator: '\', separator: '', separator_n: 0}
    flutterpy_symbol_single: {terminator: '[^!"#$%%&''()*+,%-./:<=>?@%[\%]^_`{|}~]', separator: '', separator_n: 0}
    flutterpy_symbol_multiple: {terminator: ';', separator: ';', separator_n: 1}
    flutterpy_symbolset: {terminator: ';', separator: ';', separator_n: 1}

editor:
  bindings:
    space: confirm
    Return: commit_raw_input
    Control+Return: commit_script_text
    BackSpace: revert # 默认的back设置与自动选定冲突
   
traditionize:
  opencc_config: s2tw.json
  option_name: traditionize
  tips: all #简繁对照

translator:
  dictionary: flypy
  enable_charset_filter: false
  enable_sentence: false
  enable_completion: false # 编码提示开关
  enable_user_dict: false
  initial_quality: -200000

reverse_lookup:
  dictionary: flypydz
  comment_format:
    - xform/ / /

flypy_top:
  dictionary: ""
  user_dict: flypy_top
  db_class: stabledb
  enable_sentence: false
  enable_completion: false
  initial_quality: -199999 #用户词和系统词重码 置顶
  
flypy_sys:
  dictionary: ""
  user_dict: flypy_sys
  db_class: stabledb
  enable_sentence: false
  enable_completion: false
  initial_quality: -400001 #本表词和系统词重码居后

flypy_user:
  dictionary: ""
  user_dict: flypy_user
  db_class: stabledb
  enable_sentence: false
  enable_completion: false
  initial_quality: -200001 #用户词和系统词重码居后
  
flypy_full:
  dictionary: ""
  user_dict: flypy_full
  db_class: stabledb
  enable_sentence: false
  enable_completion: false
  initial_quality: -200001 #和系统词重码时居后

flutterpy_prepend:
  dictionary: ""
  user_dict: flutterpy_user/flutterpy_prepend
  db_class: stabledb
  enable_sentence: false
  enable_completion: false
  initial_quality: 1

flutterpy_append:
  dictionary: ""
  user_dict: flutterpy_user/flutterpy_append
  db_class: stabledb
  enable_sentence: false
  enable_completion: false
  initial_quality: -1 #和系统词重码时居后

flutterpy_override:
  dictionary: ""
  user_dict: flutterpy_user/flutterpy_override
  db_class: stabledb
  enable_sentence: false
  enable_completion: false
  initial_quality: 100000
